definitions:
  controllers.EmailRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  controllers.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  controllers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.ResetPasswordRequest:
    properties:
      code:
        type: string
      email:
        type: string
      new_password:
        type: string
    required:
    - code
    - email
    - new_password
    type: object
  controllers.VerificationRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
  models.Activity:
    properties:
      activity_date:
        example: "2023-01-01"
        type: string
      activity_type:
        example: food
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      user_id:
        example: 1
        type: integer
      value:
        example: 500
        type: integer
    type: object
  models.Article:
    properties:
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      description:
        example: This is a sample article description.
        type: string
      id:
        example: 1
        type: integer
      title:
        example: Sample Article Title
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  models.User:
    description: User model for the system
    properties:
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      dob:
        example: "2000-01-30"
        type: string
      email:
        example: john.doe@example.com
        type: string
      gender:
        example: male
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
      password:
        example: securepassword123
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      verified:
        example: false
        type: boolean
    type: object
  models.UserProfile:
    properties:
      bmi:
        example: 22.9
        type: number
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      disturbed_vision:
        example: false
        type: boolean
      height:
        example: 175
        type: integer
      hypertension:
        example: false
        type: boolean
      id:
        example: 1
        type: integer
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      user_id:
        example: 1
        type: integer
      weight:
        example: 70
        type: integer
    type: object
info:
  contact: {}
paths:
  /activity:
    post:
      consumes:
      - application/json
      description: Create an activity with the provided data
      parameters:
      - description: Activity data
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/models.Activity'
      produces:
      - application/json
      responses:
        "201":
          description: Activity created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create activity
          schema:
            additionalProperties: true
            type: object
      summary: Create a new activity
      tags:
      - activity
  /activity/{id}:
    delete:
      description: Delete activity by ID
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Activity deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid activity ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to delete activity
          schema:
            additionalProperties: true
            type: object
      summary: Delete an activity
      tags:
      - activity
    get:
      description: Retrieve activity information by activity ID
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Activity retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid activity ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Activity not found
          schema:
            additionalProperties: true
            type: object
      summary: Get an activity by ID
      tags:
      - activity
    put:
      consumes:
      - application/json
      description: Update activity information
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      - description: Activity data
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/models.Activity'
      produces:
      - application/json
      responses:
        "200":
          description: Activity updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update activity
          schema:
            additionalProperties: true
            type: object
      summary: Update an activity
      tags:
      - activity
  /activity/user/{user_id}:
    get:
      description: Retrieve all activities associated with a specific user ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Activities retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to retrieve activities
          schema:
            additionalProperties: true
            type: object
      summary: Get all activities for a user
      tags:
      - activity
  /article:
    get:
      description: Retrieve all articles
      produces:
      - application/json
      responses:
        "200":
          description: Articles retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to retrieve articles
          schema:
            additionalProperties: true
            type: object
      summary: Get all articles
      tags:
      - article
    post:
      consumes:
      - application/json
      description: Create an article with the provided data
      parameters:
      - description: Article data
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.Article'
      produces:
      - application/json
      responses:
        "201":
          description: Article created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create article
          schema:
            additionalProperties: true
            type: object
      summary: Create a new article
      tags:
      - article
  /article/{id}:
    delete:
      description: Delete article by ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Article deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid article ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Article not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to delete article
          schema:
            additionalProperties: true
            type: object
      summary: Delete an article
      tags:
      - article
    get:
      description: Retrieve article information by ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Article retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid article ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Article not found
          schema:
            additionalProperties: true
            type: object
      summary: Get an article by ID
      tags:
      - article
    put:
      consumes:
      - application/json
      description: Update article information
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - description: Article data
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.Article'
      produces:
      - application/json
      responses:
        "200":
          description: Article updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Article not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update article
          schema:
            additionalProperties: true
            type: object
      summary: Update an article
      tags:
      - article
  /profile:
    delete:
      description: Delete the authenticated user's profile
      produces:
      - application/json
      responses:
        "200":
          description: Profile deleted successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to delete profile
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete user profile
      tags:
      - profile
    get:
      consumes:
      - application/json
      description: Retrieve the authenticated user's profile
      produces:
      - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Profile not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - profile
    patch:
      consumes:
      - application/json
      description: Update specific fields of the authenticated user's profile
      parameters:
      - description: Profile data to update
        in: body
        name: profile
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Profile patched successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Profile not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update profile
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Patch user profile
      tags:
      - profile
    post:
      consumes:
      - application/json
      description: Create a profile for the authenticated user
      parameters:
      - description: Profile data
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/models.UserProfile'
      produces:
      - application/json
      responses:
        "201":
          description: Profile created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create profile
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create user profile
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Update the authenticated user's profile
      parameters:
      - description: Profile data
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/models.UserProfile'
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Profile not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update profile
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - profile
  /users:
    post:
      consumes:
      - application/json
      description: Create a user with the provided data
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create user
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to delete user
          schema:
            additionalProperties: true
            type: object
      summary: Delete a user
      tags:
      - users
    get:
      description: Retrieve user information by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update user
          schema:
            additionalProperties: true
            type: object
      summary: Update a user
      tags:
      - users
  /users/forgot-password:
    post:
      consumes:
      - application/json
      description: Send a verification code to user's email for password reset
      parameters:
      - description: User Email
        in: body
        name: forgotPassword
        required: true
        schema:
          $ref: '#/definitions/controllers.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Code sent successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data or email does not exist
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Request password reset code
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate user credentials
      parameters:
      - description: Email and Password
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      summary: Login a user
      tags:
      - users
  /users/me:
    get:
      description: Retrieve information about the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User information retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get current user information
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update specific fields of the authenticated user's information
      parameters:
      - description: User data to update
        in: body
        name: userData
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: User patched successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update user
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Patch current user
      tags:
      - users
  /users/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user password using verification code
      parameters:
      - description: Email, Code, and New Password
        in: body
        name: resetPassword
        required: true
        schema:
          $ref: '#/definitions/controllers.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password has been reset successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data, code expired, or invalid password
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Reset user password
      tags:
      - users
  /verify:
    post:
      consumes:
      - application/json
      description: Verifies the provided code for the user's email
      parameters:
      - description: Verification details
        in: body
        name: verification
        required: true
        schema:
          $ref: '#/definitions/controllers.VerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Verification successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid or expired verification code
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to verify user
          schema:
            additionalProperties: true
            type: object
      summary: Verify a user's verification code
      tags:
      - verification
  /verify/resend:
    post:
      consumes:
      - application/json
      description: Resends the verification code to the user's email
      parameters:
      - description: User email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/controllers.EmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Verification code resent successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create verification code
          schema:
            additionalProperties: true
            type: object
      summary: Resend the verification code
      tags:
      - verification
  /verify/send:
    post:
      consumes:
      - application/json
      description: Sends a 6-digit verification code to the specified email address
      parameters:
      - description: User email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/controllers.EmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Verification code sent successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create verification code
          schema:
            additionalProperties: true
            type: object
      summary: Send a verification code to user's email
      tags:
      - verification
swagger: "2.0"
